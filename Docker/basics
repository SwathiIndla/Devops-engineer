Docker is a set of platforms as a service (PaaS) products that use Operating system-level virtualization to deliver software in packages called containers
Docker is an open-source containerization platform by which you can pack your application and all its dependencies into a standardized unit called a container

WHAT IS DOCKERFILE????
The Dockerfile uses DSL (Domain Specific Language) and contains instructions for generating a Docker image. Dockerfile will define the processes to quickly produce an image.
While creating your application, you should create a Dockerfile in order since the Docker daemon runs all of the instructions from top to bottom.


WHAT IS DOCKER IMAGES???
It is a file, comprised of multiple layers, used to execute code in a Docker container. They are a set of instructions used to create docker containers.
Docker Image is an executable package of software that includes everything needed to run an application. This image informs how a container should instantiate,
determining which software components will run and how. Docker Container is a virtual environment 
that bundles application code with all the dependencies required to run the application. The application runs quickly and reliably from one computing environment to another.

WHAT IS DOCKER CONTAINERS??
Docker container is a runtime instance of an image. Allows developers to package applications with all parts needed such as libraries and other dependencies. Docker Containers 
are runtime instances of Docker images

INSTALLATING A DOCKER ON UBUNTU -
  sudo apt-get update
  sudo apt install docker.io
 1. Remove old version of Docker -- $ sudo apt-get remove docker docker-engine docker.io containerd runc

DOCKER COMMANDS
 1.docker run <image-name> -- to run a container from an image 
 2.docker run --name <container_name> <image-name> -- to give name of cotainer
3.docker pull <image-name> -- to pull any image which is present in offical docker hub
 4.docker ps -- list all running container 
 5.docker ps -a  -- listing all stopped and running containers
 6.docker ps -l -- list the latest container
 7.docker ps -q -- shows the id of the container
 8.docker stop <container-id/container-name> -- to stop a container
 9.docker start <container-id/container-name> -- to start a container
 10.docker rm {options} <container-id/container-name> - to remove the container
      -f flag: remove the container forcefully.
      -v flag: remove the volumes.
      -l flag: remove the specific link mentioned.
11.docker rmi <image ID/ image name> -- to delete image in docker
12.docker images -- list of images
13.docker exec {options} --This command allows us to run new commands in a running container.
  -d flag: for running the commands in the background.
  -i flag: it will keep STDIN open even when not attached.
  -e flag: sets the environment variables 
  ex: docker exec <cont-id> cat /etc/*release*
14.docker login -- login to docker hub
15.docker push <imagename/image-id> -- to push inti hub
15.docker build -t image-name:tag . -- to build docker image
16 .docker images -q | wc -l -- no.of images in local in number
17. docker rmi $(docker images -aq) -- to delete all the images at a time 
18.docker images <image-name> - to see details of particular image
19.docker image <image-image.> --no-trunc -- To display Docker Images, with full-length Image Ids, you use the â€“no-trunc flag.
20.docker run <image-name> sleep 10 -to sleep the container in 10 sec
  after 10 sec the container automatically will stop
  to attach the same sutiation 
  docker attach <cont-id> --before attaching ensure the container is ruunning
21.sudo docker --filter=reference='ubuntu' -- to filter the images
22.docker run -it <container-name> -- to enter into that container
23.os.environ.get(" ") - to modify it in future 
  ex : colour = os.environ.get("APP-COLOR") in code 
   in exceution  export APP-COLOR ="blue"
   docker run -e export APP-COLOR ="blue" <image-name>
What is Docker Compose????
Docker Compose will execute a YAML-based multi-container application. The YAML file consists of all configurations needed to deploy containers Docker Compose, which 
is integrated with Docker Swarm, and provides directions for building and deploying containers. With Docker Compose, each container is constructed to run on a 
single host.
